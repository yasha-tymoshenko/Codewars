package com.tymoshenko.codewars.pathfinder;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class PathFinderAlpinistTest {

    @Test
    void sampleTests() {

        String a = "000\n" +
                "000\n" +
                "000",

                b = "010\n" +
                        "010\n" +
                        "010",

                c =     "010\n" +
                        "101\n" +
                        "010",

                d = "0707\n" +
                        "7070\n" +
                        "0707\n" +
                        "7070",

                e = "700000\n" +
                        "077770\n" +
                        "077770\n" +
                        "077770\n" +
                        "077770\n" +
                        "000007",

                f =     "777000\n" +
                        "007000\n" +
                        "007000\n" +
                        "007000\n" +
                        "007000\n" +
                        "007777",

                g = "000000\n" +
                        "000000\n" +
                        "000000\n" +
                        "000010\n" +
                        "000109\n" +
                        "001010",

                h = "8\n",


                i =     "328193837181180478\n" +
                        "701813772880129216\n" +
                        "141378254125027334\n" +
                        "196616776954351753\n" +
                        "895077647871006244\n" +
                        "184103179345022814\n" +
                        "892588867146270406\n" +
                        "605527041970416810\n" +
                        "988782530907588686\n" +
                        "268784996885033287\n" +
                        "420559616386464226\n" +
                        "432540596826568229\n" +
                        "359702155121931730\n" +
                        "009922623574974672\n" +
                        "290998266920667698\n" +
                        "294632226986682816\n" +
                        "347424608642463728\n" +
                        "579316793414725367",

                j =
                                "788388205728\n" +
                                "608755702236\n" +
                                "208716926147\n" +
                                "989734777344\n" +
                                "872391490949\n" +
                                "975927777742\n" +
                                "464055101104\n" +
                                "222185569118\n" +
                                "222470175547\n" +
                                "352119064231\n" +
                                "320183798486\n" +
                                "426257061280\n",

                k =
                        "44400\n" +
                        "00400\n" +
                        "04440\n" +
                        "04090\n" +
                        "04444\n",

                l =
                                "02837\n" +
                                "20221\n" +
                                "88460\n" +
                                "81188\n" +
                                "88763";
// 4  4  4  0  0  0  0  0  4
// 4  4  4  4  4  4  4  4  4  4  4


        assertEquals(0, PathFinderAlpinist.pathFinder(a));
        assertEquals(2, PathFinderAlpinist.pathFinder(b));
        assertEquals(4, PathFinderAlpinist.pathFinder(c));
        assertEquals(42, PathFinderAlpinist.pathFinder(d));
        assertEquals(14, PathFinderAlpinist.pathFinder(e));
        assertEquals(0, PathFinderAlpinist.pathFinder(f));
        assertEquals(4, PathFinderAlpinist.pathFinder(g));
        assertEquals(0, PathFinderAlpinist.pathFinder(h));
        assertEquals(48, PathFinderAlpinist.pathFinder(i));
        assertEquals(35, PathFinderAlpinist.pathFinder(j));
        assertEquals(0, PathFinderAlpinist.pathFinder(k));
        assertEquals(13, PathFinderAlpinist.pathFinder(l));
    }

    @Test
    void big() {
        String maze =
                        "37668415566923195410618665938260948787830522300\n" +
                        "18517064532889182337179421848838420143743807470\n" +
                        "76686150636109537351989916055210603260157203258\n" +
                        "08055793168815256674338052998970730323109613378\n" +
                        "78255956232434858891631724916091881695437503405\n" +
                        "09009241983406295360445284014621756963510804801\n" +
                        "87232381788502787768622670946043570947407638631\n" +
                        "83814003590806696689889329106512885744461173840\n" +
                        "79670753374994842540041205737376647409112962781\n" +
                        "21609784465158029787891527348175439467640836687\n" +
                        "83550228538160162030523225072305022709384815346\n" +
                        "21035370453152373224802210222758760168578424815\n" +
                        "66274249683574327872020371543254721024132727497\n" +
                        "04292837094470698844849647087347425791378514382\n" +
                        "48010951909785299798491323337712634558207563789\n" +
                        "23987308949021579959721760997816673451546090503\n" +
                        "39755395496318639352711780462570246786882871388\n" +
                        "53510461627343323669153431178785145325197295133\n" +
                        "36383057357575779041324220980232587065073316712\n" +
                        "72083103371357793731070857842271553588743772120\n" +
                        "96618375682684394661162698849817661947029590142\n" +
                        "45025434398353427327754179214667992776506133389\n" +
                        "88905602887122106299748815249421838729085841449\n" +
                        "16233793115445667236250175804602167815799451002\n" +
                        "51051763320434416626563920615600104353618577678\n" +
                        "54307686334495160042401109082449674189610077668\n" +
                        "16191210683155301831073976791477204247687385026\n" +
                        "01743397075232541085750003769526696143898339494\n" +
                        "53137018673622053135463185712657694359376149224\n" +
                        "33242203593611363109216562526257431293487238931\n" +
                        "50459214469095670361787829129512536019544484866\n" +
                        "87049231672714722617032879728872164540901995550\n" +
                        "72546081505811654382223643715230956986680005535\n" +
                        "08119019652152871056471179205971245450733012502\n" +
                        "03963922261719662709850317904623244664680833728\n" +
                        "81905798557051852949471932754279080953957294329\n" +
                        "92257001709431289569738048472696238004543224149\n" +
                        "22236614749454632968713019364867683431032374988\n" +
                        "43727205518425732568983816505090628572546535312\n" +
                        "58653994548355252705064161043637881554764072176\n" +
                        "02604054722288451409600215608467331929733728747\n" +
                        "59657608044703390379664317851672637267693441305\n" +
                        "19449328514302441619917587179003312135012981545\n" +
                        "43238559009113817642289342007593083087010391102\n" +
                        "07710058045785801016555145330323429777618944411\n" +
                        "02892681778754749768031505291521447595537800172\n" +
                        "45113388825445452185124730031430867309745655463";

        assertEquals(120, PathFinderAlpinist.pathFinder(maze));
    }
}